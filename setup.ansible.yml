---
  - name: Systemwide changes
    hosts: localhost
    connection: local
    become: yes
    vars:
      HOSTNAME: "UbuntuWSL"

    tasks:

      - name: Exiting if we are not running Ubuntu
        ansible.builtin.fail:
          msg: "The OS is {{ ansible_facts['distribution'] }}. This playbook is only meant to work with Ubuntu."
        when: ansible_facts['distribution'] != "Ubuntu"

      - name: Adding a PPA that provides the latest stable upstream Git version
        ansible.builtin.apt_repository:
          repo: ppa:git-core/ppa

      - name: Updating system
        ansible.builtin.apt:
          update_cache: yes
          upgrade: full
        tags: update

      - name: Installing packages
        ansible.builtin.apt:
          cache_valid_time: 600
          update_cache: yes
          install_recommends: yes
          name:
            - ansible
            - ansible-doc
            - gnupg
            - coreutils
            - aptitude
            - git
            - openssh-client
            - joe
            - mc
            - python3-pip
            - finger
            - htop
            - colordiff
            - geany
            - geany-plugins
            - adwaita-icon-theme-full
            - meld
            - gpa
          state: latest
        tags: install

      - name: Installing packages for Java
        ansible.builtin.apt:
          cache_valid_time: 600
          update_cache: yes
          install_recommends: yes
          name:
            - default-jdk
            - default-jdk-doc
          state: latest
        tags: java

      - name: Cleaning the local apt cache
        ansible.builtin.apt:
          autoclean: yes

      - name: Creating /etc/wsl.conf from template wsl.conf.j2
        ansible.builtin.template:
          src: ./wsl.conf.j2
          dest: /etc/wsl.conf
        tags: wsl.conf

  - name: Setting up the environment for the current user
    hosts: localhost
    connection: local
    tags: user
    vars:
      SSH_KEY_FILENAME: "id_ed25519.git"
      SSH_KEY_FINGERPRINTS: [
        "github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl",
        "github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=",
        "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="
      ]

    tasks:

      - name: Exiting if FULLNAME or EMAIL are not defined
        ansible.builtin.fail:
          msg: "Required variables FULLNAME or EMAIL are not defined."
        when: (FULLNAME is undefined) or (EMAIL is undefined)

      - name: Creating directory ~/.ssh/ if it does not exist
        ansible.builtin.file:
          path: ~/.ssh/
          state: directory
          mode: u=rwx,g=,o=
        tags: ssh

      - name: Generating a GitHub recommended SSH key if it doesn't exist
        community.crypto.openssh_keypair:
          path: ~/.ssh/{{ SSH_KEY_FILENAME }}
          type: ed25519
          comment: "{{ EMAIL }}"
          regenerate: partial_idempotence
        tags: ssh

      - name: Creating ~/.ssh/config from template ssh_client_config.j2
        ansible.builtin.template:
          src: ./ssh_client_config.j2
          dest: ~/.ssh/config
          mode: u=rw,g=,o=
          backup: yes
        tags: ssh

      - name: Adding SSH key fingerprints to ~/.ssh/known_hosts
        ansible.builtin.lineinfile:
          path: ~/.ssh/known_hosts
          line: '{{ item }}'
          mode: u=rw,g=,o=
          create: yes
        with_items: '{{ SSH_KEY_FINGERPRINTS }}'
        tags: ssh

      - name: Setting up GPG
        ansible.builtin.command:
          cmd: ./scripts/setup_gpg.sh "{{ FULLNAME }}" "{{ EMAIL }}"
          creates: ~/.gnupg
        register: GPG_OUTPUT
        tags: gpg

      - name: Printing the output of GPG setup
        ansible.builtin.debug:
          var: GPG_OUTPUT.stdout_lines
        tags: gpg

      - name: Creating ~/bash_profile.sh from template bash_profile.sh.j2
        ansible.builtin.template:
          src: ./bash_profile.sh.j2
          dest: ~/bash_profile.sh
          mode: u+x
        tags: bash_profile.sh

      - name: Adding a line to ~/.bashrc to run ~/bash_profile.sh
        ansible.builtin.lineinfile:
          path: ~/.bashrc
          line: . ~/bash_profile.sh
          backup: yes
        tags: bash_profile.sh

      - name: Setting the full name in /etc/passwd
        ansible.builtin.command: /usr/bin/chfn --full-name "{{ FULLNAME }}" {{ ansible_facts['user_id'] }}
        become: yes
        when: FULLNAME != (ansible_facts['user_gecos'] | split(','))[0]
